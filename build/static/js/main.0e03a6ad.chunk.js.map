{"version":3,"sources":["components/common/button/button.component.js","util/notify.js","util/httpClient.js","components/auth/login/login.component.js","components/auth/register/register.component.js","components/common/header/header.component.js","components/common/message/message.component.js","components/common/sidebar/sidebar.component.js","components/products/productForm/productForm.component.js","components/products/addProduct/addProduct.component.js","components/common/loader/loader.component.js","components/products/editProduct/editProduct.component.js","util/dateProcessing.js","actions/products/product.action.js","actions/products/type.js","components/products/viewProduct/viewProduct.component.js","components/products/searchProduct/searchProduct.component.js","components/app.routing.js","reducers/product.red.js","reducers/index.js","store.js","components/app.component.js","index.js"],"names":["Button","props","enabledLabel","disabledLabel","isSubmitting","disabled","className","isValidForm","type","showInfo","msg","toast","info","showSuccess","success","showWarning","warning","handleError","error","errMsg","err","response","data","BaseURL","process","http","axios","create","baseURL","responseType","getHeaders","isSecured","options","localStorage","getItem","url","post","headers","params","get","delete","method","files","Promise","resolve","reject","xhr","XMLHttpRequest","formData","FormData","key","length","append","name","onreadystatechange","readyState","status","open","send","defaultForm","username","password","Login","handleChange","e","target","value","checked","setState","pre","validateForm","fieldName","state","errors","Object","values","filter","handleSubmit","preventDefault","httpClient","then","notify","user","setItem","JSON","stringify","token","remember_me","history","push","catch","this","onSubmit","htmlFor","placeholder","id","onChange","to","React","Component","email","address","phoneNumber","confirmPassword","Register","preState","includes","preProps","clearInterval","interval","noValidate","Header","withRouter","isLoggedIn","onClick","clear","MessageComponent","messageBody","socket","emit","senderName","senderId","receiverId","receiverName","time","message","messages","io","runSocket","on","console","log","map","item","index","SideBar","description","brand","category","price","color","modelNo","discountedItem","discountType","discountValue","tags","manuDate","expiryDate","ProductForm","submitCallback","filesToUpload","product","discount","discountContent","title","images","src","alt","width","AddProduct","add","Loader","EditProduct","edit","requestData","vendor","keys","_id","isLoading","productId","match","finally","formatDate","date","format","moment","formatTime","payload","ViewProductComponent","changePageNumber","evt","currentPage","setPageNumber","fetch","perPage","incomingProducts","products","window","confirm","remove","content","dateUtil","createdAt","resetSearch","ViewProduct","connect","rootStore","dispatch","getState","forEach","splice","remove_product_ac","pageNumber","setPageNumber_ac","minPrice","maxPrice","fromDate","multipleDateRange","toDate","SearchComponent","prepareNames","selectedCategory","names","allProducts","searchResults","categories","indexOf","Home","Dashboard","NotFound","ProtectedRoute","component","rest","render","routeProps","PublicRoute","AppRouting","exact","path","initialState","combineReducers","action","middlewares","thunk","store","createStore","rootReducer","applyMiddleware","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.0e03a6ad.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Button = (props) => {\n    let enabledLabel = props.enabledLabel || 'submit';\n    let disabledLabel = props.disabledLabel || 'submitting...'\n    let btn = props.isSubmitting\n        ? <button disabled className=\"btn btn-info\">{disabledLabel}</button>\n        : <button disabled={!props.isValidForm} type=\"submit\" className=\"btn btn-primary\">{enabledLabel}</button>\n    return btn;\n}","import { toast } from 'react-toastify'\n\nfunction showSuccess(msg) {\n    toast.success(msg);\n}\n\nfunction showInfo(msg) {\n    toast.info(msg);\n}\n\nfunction showWarning(msg) {\n    toast.warning(msg);\n}\n\nfunction showError(msg) {\n    toast.error(msg);\n}\n\nfunction handleError(error) {\n    let errMsg = 'Something Went Wrong';\n    debugger;\n    const err = error.response;\n    if (err && err.data) {\n        errMsg = err.data.msg\n    }\n    // this is an error hanlding block\n    // steps\n    // check error, \n    // parse error\n    // prepare appropriate error message\n    // show them in UI\n    showError(errMsg)\n\n}\nexport default {\n    showInfo,\n    showSuccess,\n    showWarning,\n    handleError\n}","import axios from 'axios';\nconst BaseURL = process.env.REACT_APP_BASE_URL;\n\n// axios base instance\nconst http = axios.create({\n    baseURL: BaseURL,\n    responseType: 'json'\n})\n\nfunction getHeaders(isSecured) {\n    let options = {\n        'Content-Type': 'application/json'\n    }\n    if (isSecured) {\n        options['Authorization'] = localStorage.getItem('token');\n    }\n    return options;\n}\n\nconst POST = (url, data, isSecured = false, params = {}) => {\n    return http\n        .post(url, data, {\n            headers: getHeaders(isSecured)\n        })\n}\nconst GET = (url, isSecured = false, params = {}) => {\n    return http\n        .get(url, {\n            headers: getHeaders(isSecured),\n            params: params\n        })\n}\nconst PUT = (url, data, isSecured = false, params = {}) => {\n    return http\n        .put(url, data, {\n            headers: getHeaders(isSecured)\n        })\n}\nconst DELETE = (url, isSecured = false, params = {}) => {\n    return http\n        .delete(url, {\n            headers: getHeaders(isSecured)\n        })\n}\n\nconst UPLOAD = (method, url, data, files = []) => {\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        const formData = new FormData();\n\n        // append files to formaData\n        if (files.length) {\n            formData.append('image', files[0], files[0].name);\n        }\n\n        // append textual data to formData\n        for (let key in data) {\n            formData.append(key, data[key]);\n        }\n\n        xhr.onreadystatechange = () => {\n            if (xhr.readyState === 4) {\n                if (xhr.status === 200) {\n                    resolve(xhr.response)\n                } else {\n                    reject(xhr.response)\n                }\n            }\n        }\n\n        xhr.open(method, `${BaseURL}/${url}?token=${localStorage.getItem('token')}`, true);\n        xhr.send(formData);\n    })\n\n}\n\nexport default {\n    POST,\n    GET,\n    PUT,\n    DELETE,\n    UPLOAD\n}\n\n","import React from 'react';\nimport { Button } from '../../common/button/button.component';\nimport { Link } from 'react-router-dom';\nimport notify from './../../../util/notify';\nimport httpClient from './../../../util/httpClient';\n\nconst defaultForm = {\n    username: '',\n    password: ''\n}\nexport class Login extends React.Component {\n\n    constructor() {\n        super(); // parent class constructor call\n        this.state = {\n            data: {\n                ...defaultForm\n            },\n            error: {\n                ...defaultForm\n            },\n            remember_me: false,\n            isSubmitting: false,\n            isValidForm: false,\n        };\n    }\n\n    componentDidMount() {\n        if (localStorage.getItem('remember_me') === 'true') {\n            this.props.history.push('/home/dashboard')\n        }\n    }\n\n    handleChange = (e) => {\n        let { name, value, checked, type } = e.target;\n\n        if (type === 'checkbox') {\n            value = checked;\n            return this.setState({\n                [name]: value\n            })\n        }\n        this.setState(pre => ({\n            data: {\n                ...pre.data,\n                [name]: value\n            }\n        }), () => {\n            this.validateForm(name);\n        })\n    }\n    validateForm = (fieldName) => {\n        let errMsg = this.state.data[fieldName]\n            ? ''\n            : `${fieldName} is required`;\n\n        this.setState(pre => ({\n            error: {\n                ...pre.error,\n                [fieldName]: errMsg\n            }\n        }), () => {\n            const errors = Object\n                .values(this.state.error)\n                .filter(err => err);\n\n            this.setState({\n                isValidForm: errors.length === 0\n            })\n\n        })\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.setState({\n            isSubmitting: true\n        })\n\n        httpClient\n            .POST('/auth/login', this.state.data, null)\n            .then(response => {\n                notify.showSuccess(`Welcome ${response.data.user.username}`);\n                localStorage.setItem('user', JSON.stringify(response.data.user));\n                localStorage.setItem('token', response.data.token)\n                localStorage.setItem('remember_me', this.state.remember_me);\n                this.props.history.push('/dashboard');\n            })\n            .catch(err => {\n                notify.handleError(err);\n                this.setState({\n                    isSubmitting: false\n                })\n            })\n    }\n\n    // render is mandatory method for class based component\n    render() {\n        // UI logic reside inside render\n        // render  must return html node\n        return (\n            <div>\n                <h2>Login</h2>\n                <p>Please Login to start your session</p>\n                <form className=\"form-group\" onSubmit={this.handleSubmit}>\n                    <label htmlFor=\"username\">Username</label>\n                    <input className=\"form-control\" type=\"text\" placeholder=\"Username\" id=\"username\" name=\"username\" onChange={this.handleChange}></input>\n                    <p className=\"error\">{this.state.error.username}</p>\n                    <label htmlFor=\"password\">Password</label>\n                    <input className=\"form-control\" type=\"password\" placeholder=\"Password\" id=\"password\" name=\"password\" onChange={this.handleChange}></input>\n                    <p className=\"error\">{this.state.error.password}</p>\n                    <input type=\"checkbox\" name=\"remember_me\" onChange={this.handleChange} ></input>\n                    <label>Remeber Me</label>\n                    <br />\n                    <Button\n                        isSubmitting={this.state.isSubmitting}\n                        isValidForm={this.state.isValidForm}\n                        enabledLabel='Login'\n                        disabledLabel='Logingin...'\n                    ></Button>\n                </form>\n                <p>Don't have an account?</p>\n                <p>Register <Link to=\"/register\">here</Link></p>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button } from '../../common/button/button.component';\nimport notify from './../../../util/notify';\nimport httpClient from './../../../util/httpClient';\n// const specialCharacters = ['_', '@', '!'];\n\n\nconst defaultForm = {\n    name: '',\n    email: '',\n    address: '',\n    phoneNumber: '',\n    username: '',\n    password: '',\n    confirmPassword: '',\n\n}\nexport class Register extends Component {\n    constructor() {\n        super();\n        this.state = {\n            data: {\n                ...defaultForm\n            },\n            error: {\n                ...defaultForm,\n            },\n            isSubmitting: false,\n            isValidForm: false\n        };\n    }\n\n    componentDidMount() {\n        // console.log('when component is fully loaded', this.props)\n        // API call\n        // fetch data to show them in UI\n\n\n    }\n\n    componentDidUpdate(preProps, preState) {\n        // console.log('prev props >>', preProps);\n        // console.log('pre state >>', preState.data)\n        // console.log('when component is updated', this.state.data);\n    }\n    componentWillUnmount() {\n        // console.log('register component is destroyed')\n        clearInterval(this.interval)\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.setState({\n            isSubmitting: true\n        })\n        httpClient\n            .POST('/auth/register', this.state.data)\n            .then(response => {\n                this.props.history.push('/');\n                notify.showInfo(\"Registration sucessfull please login\");\n            })\n            .catch(err => {\n                notify.handleError(err);\n                this.setState({\n                    isSubmitting: false\n                })\n            })\n\n    }\n    handleChange = e => {\n        const { name, value } = e.target;\n        this.setState(preState => ({\n            data: {\n                ...preState.data,\n                [name]: value\n            }\n        }), () => {\n            this.validateForm(name);\n        })\n    }\n\n    validateForm = (fieldName) => {\n        let errMsg;\n        switch (fieldName) {\n            case 'username':\n                errMsg = this.state.data[fieldName]\n                    ? ''\n                    : 'required field*'\n                break;\n            case 'email':\n                errMsg = this.state.data[fieldName]\n                    ? this.state.data[fieldName].includes('@') && this.state.data[fieldName].includes('.com')\n                        ? ''\n                        : 'Invalid Email'\n                    : 'required field*'\n                break;\n            case 'password':\n                errMsg = this.state.data[fieldName]\n                    ? this.state.data[fieldName].length > 6\n                        ? ''\n                        : 'weak password'\n                    : 'required field*';\n                break;\n            case 'confirmPassword':\n                errMsg = this.state.data[fieldName]\n                    ? this.state.data[fieldName] === this.state.data.password\n                        ? ''\n                        : 'Password didnot match'\n                    : 'required field*'\n                break;\n            default:\n                break;\n        }\n        this.setState(preState => ({\n            error: {\n                ...preState.error,\n                [fieldName]: errMsg\n            }\n        }), () => {\n            const errors = Object\n                .values(this.state.error)\n                .filter(err => err);\n            this.setState({\n                isValidForm: errors.length === 0\n            })\n        });\n    }\n\n    render() {\n        // console.log('render at second')\n        return (\n            <div>\n                <h2>Register</h2>\n                <p>Please Register to continue</p>\n                <form className=\"form-group\" onSubmit={this.handleSubmit} noValidate>\n                    <label>Name</label>\n                    <input type=\"text\" className=\"form-control\" name=\"name\" placeholder=\"Name\" onChange={this.handleChange}></input>\n                    <label>Address</label>\n                    <input type=\"text\" className=\"form-control\" name=\"address\" placeholder=\"Address\" onChange={this.handleChange}></input>\n                    <label>Email</label>\n                    <input type=\"text\" className=\"form-control\" name=\"email\" placeholder=\"Email\" onChange={this.handleChange}></input>\n                    <p className=\"error\">{this.state.error.email}</p>                    <label>Phone Number</label>\n                    <input type=\"number\" className=\"form-control\" name=\"phoneNumber\" onChange={this.handleChange}></input>\n                    <label>Username</label>\n                    <input type=\"text\" className=\"form-control\" name=\"username\" placeholder=\"Username\" onChange={this.handleChange}></input>\n                    <p className=\"error\">{this.state.error.username}</p>\n                    <label>Password</label>\n                    <input type=\"text\" className=\"form-control\" name=\"password\" placeholder=\"Password\" onChange={this.handleChange}></input>\n                    <p className=\"error\">{this.state.error.password}</p>\n                    <label>Confirm Password</label>\n                    <input type=\"text\" className=\"form-control\" name=\"confirmPassword\" placeholder=\"Confirm Password\" onChange={this.handleChange}></input>\n                    <p className=\"error\">{this.state.error.confirmPassword}</p>\n\n                    <br />\n                    <Button\n                        isSubmitting={this.state.isSubmitting}\n                        isValidForm={this.state.isValidForm}\n                    ></Button>\n                </form>\n                <p> Already Registered?</p>\n                <p>Back to <Link to=\"/\">login</Link></p>\n            </div>\n        )\n    }\n}\n\n\n// class based component is generally used to maintain state of component\n// render method is mandatory inside class which will return a single html node\n\n\n// life cycle of a component\n// INIT, UPDATE, DESTROY\n\n","import React from 'react';\nimport './header.component.css'\nimport { Link, withRouter } from 'react-router-dom';\n\nconst logout = (history) => {\n    localStorage.clear();\n    history.push('/');\n}\nconst HeaderComponent = (props) => {\n    // props is incoming data\n    let content = props.isLoggedIn\n        ? <ul className=\"nav_list\">\n            <li className=\"nav_item\">\n                <Link to=\"/dashboard\">Dashboard</Link>\n\n            </li>\n            <li className=\"nav_item\">\n                <Link to=\"/profile\">Profile</Link>\n\n            </li>\n            <li className=\"nav_item\">\n                <button className=\"btn btn-success logout\" onClick={() => logout(props.history)}>Logout</button>\n\n            </li>\n        </ul>\n        : <ul className=\"nav_list\">\n            <li className=\"nav_item\">\n                <Link to=\"/\">Login</Link>\n            </li>\n            <li className=\"nav_item\">\n                <Link to=\"/home\">Home</Link>\n            </li>\n            <li className=\"nav_item\">\n                <Link to=\"/about\">About</Link>\n            </li>\n            <li className=\"nav_item\">\n                <Link to=\"/contacts\">Contact</Link>\n            </li>\n        </ul>\n    return content\n}\n\nexport const Header = withRouter(HeaderComponent);\n\n\n// form_validation\n// web_storage==> localstorage, sessionstorage\n// toastr ==> configuration, scope maintain(Scalable)\n// error handling service==> \n// withRouter ==> wrapper that will provide the props to component\n// authentication\n\n// client - server communication\n// protocol\n// smtp\n// ftp\n// http\n\n// web === http, web-server === http-server, web client === http client\n\n// protocol \n// http verb(method)\n// http statuscode\n// REST ","import React, { Component } from 'react'\nimport * as io from 'socket.io-client';\nimport './message.component.css';\nconst SocketURL = process.env.REACT_APP_SOCKET_URL;\n\nexport class MessageComponent extends Component {\n    constructor() {\n        super()\n\n        this.state = {\n            messageBody: {\n                senderName: '',\n                senderId: '',\n                receiverId: '',\n                receiverName: '',\n                time: '',\n                message: ''\n            },\n            messages: []\n        }\n    }\n\n    componentDidMount() {\n        this.socket = io(SocketURL);\n        this.runSocket();\n    }\n\n    runSocket() {\n        this.socket.on('hi', (data) => {\n            console.log('message from server >', data)\n            this.socket.emit('hello', 'from client')\n        })\n        this.socket.on('reply-msg', (data) => {\n            const { messages } = this.state;\n            messages.push(data);\n            this.setState({\n                messages\n            })\n        })\n    }\n\n    handleChange = e => {\n        const { name, value } = e.target;\n        this.setState(pre => ({\n            messageBody: {\n                ...pre.messageBody,\n                [name]: value\n            }\n        }))\n    }\n\n    send = e => {\n        e.preventDefault();\n        const { messageBody } = this.state;\n        // append data in message body\n        this.socket.emit('new-message', messageBody);\n    }\n\n    render() {\n        return (\n            <>\n                <h2>Let's Chat</h2>\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                        <ins>Messages</ins>\n                        <div className=\"message_box\">\n                            {this.state.messages.map((item, index) => (\n                                <div key={index}>\n                                    <p>{item.message}</p>\n                                    <p>{item.senderName}</p>\n                                    <small>{item.time}</small>\n                                </div>\n                            ))}\n                        </div>\n                        <form className=\"form-group\" onSubmit={this.send}>\n                            <input type=\"text\" className=\"form-control\" onChange={this.handleChange} placeholder=\"Your Message here...\" name=\"message\"></input>\n                            <button className=\"btn btn-success\" type=\"submit\">send</button>\n                        </form>\n                    </div>\n                    <div className=\"col-md-6\">\n                        <ins>Users</ins>\n                        <div className=\"message_box\">\n\n                        </div>\n\n                    </div>\n                </div>\n            </>\n        )\n    }\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport './sidebar.component.css'\n\nexport const SideBar = () => {\n    return (\n        <>\n            <Link to=\"/dashboard\">Dashboard</Link>\n            <Link to=\"/add_product\">Add Product</Link>\n            <Link to=\"/view_product\">View Product</Link>\n            <Link to=\"/search_product\">Search Product</Link>\n            <Link to=\"/chat\">Messages</Link>\n        </>\n    )\n}\n","import React, { Component } from 'react'\nimport { Button } from '../../common/button/button.component';\nconst IMG_URL = process.env.REACT_APP_IMG_URL;\n\n\nconst defaultForm = {\n    name: '',\n    description: '',\n    brand: '',\n    category: '',\n    price: '',\n    color: '',\n    modelNo: '',\n    discountedItem: '',\n    discountType: '',\n    discountValue: '',\n    tags: '',\n    manuDate: '',\n    expiryDate: ''\n\n}\n\nexport class ProductForm extends Component {\n    constructor() {\n        super();\n        this.state = {\n            data: {\n                ...defaultForm\n            },\n            error: {\n                ...defaultForm\n            },\n            filesToUpload: [],\n            isValidForm: false\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.product) {\n            this.setState({\n                data: {\n                    ...defaultForm,\n                    ...this.props.product,\n                    discountedItem: this.props.product.discount ? this.props.product.discount.discountedItem : '',\n                    discountType: this.props.product.discount ? this.props.product.discount.discountType : '',\n                    discountValue: this.props.product.discount ? this.props.product.discount.discountValue : '',\n                }\n            })\n        }\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.submitCallback(this.state.data, this.state.filesToUpload)\n    }\n\n    handleChange = e => {\n        let { name, value, type, checked, files } = e.target;\n        if (type === 'checkbox') {\n            value = checked\n        }\n        if (type === 'file') {\n            return this.setState({\n                filesToUpload: files\n            })\n        }\n\n        this.setState(pre => ({\n            data: {\n                ...pre.data,\n                [name]: value\n            }\n        }), () => {\n            this.validateForm(name);\n        })\n    }\n\n    validateForm = (fieldName) => {\n        let errMsg;\n        switch (fieldName) {\n            case 'category':\n                errMsg = this.state.data[fieldName]\n                    ? ''\n                    : 'required field*'\n                break;\n            default:\n                break;\n        }\n        this.setState(pre => ({\n            error: {\n                ...pre.error,\n                [fieldName]: errMsg\n            }\n        }), () => {\n            const errors = Object\n                .values(this.state.error)\n                .filter(err => err);\n\n            this.setState({\n                isValidForm: errors.length === 0\n            })\n        })\n    }\n    render() {\n        let discountContent = this.state.data.discountedItem\n            ? <>\n                <label>Discount Type</label>\n                <select name=\"discountType\" className=\"form-control\" value={this.state.data.discountType} value={this.state.data.discountType} onChange={this.handleChange}>\n                    <option disabled value=\"\">(Select Type)</option>\n                    <option value=\"percentage\">Percentage</option>\n                    <option value=\"quantity\"> Quantity</option>\n                    <option value=\"value\">Value</option>\n                </select>\n                <label>Discount Value</label>\n                <input type=\"text\" className=\"form-control\" value={this.state.data.discountValue} name=\"discountValue\" placeholder=\"Discount Value\" onChange={this.handleChange}></input>\n            </>\n            : null\n\n        return (\n            <>\n                <h2>{this.props.title}</h2>\n                <form className=\"form-group\" onSubmit={this.handleSubmit} noValidate>\n                    <label>Name</label>\n                    <input type=\"text\" className=\"form-control\" value={this.state.data.name} name=\"name\" placeholder=\"Name\" onChange={this.handleChange}></input>\n                    <label>Description</label>\n                    <input type=\"text\" className=\"form-control\" value={this.state.data.description} name=\"description\" placeholder=\"Description\" onChange={this.handleChange}></input>\n                    <label>Category</label>\n                    <input type=\"text\" className=\"form-control\" value={this.state.data.category} name=\"category\" placeholder=\"Category\" onChange={this.handleChange}></input>\n                    <p className=\"error\">{this.state.error.category}</p>\n                    <label>Brand</label>\n                    <input type=\"text\" className=\"form-control\" value={this.state.data.brand} name=\"brand\" placeholder=\"Brand\" onChange={this.handleChange}></input>\n                    <label>Price</label>\n                    <input type=\"text\" className=\"form-control\" value={this.state.data.price} name=\"price\" placeholder=\"Price\" onChange={this.handleChange}></input>\n                    <label>Color</label>\n                    <input type=\"text\" className=\"form-control\" value={this.state.data.color} name=\"color\" placeholder=\"Color\" onChange={this.handleChange}></input>\n                    <label>Model No</label>\n                    <input type=\"text\" className=\"form-control\" value={this.state.data.modelNo} name=\"modelNo\" placeholder=\"Model No\" onChange={this.handleChange}></input>\n                    <input type=\"checkbox\" name=\"discountedItem\" checked={this.state.data.discountedItem} onChange={this.handleChange}></input>\n                    <label>Discounted Item</label>\n                    <br />\n                    {discountContent}\n                    <label>Manu Date</label>\n                    <input type=\"date\" className=\"form-control\" value={this.state.data.manuDate} name=\"manuDate\" onChange={this.handleChange}></input>\n                    <label>Expiry Date</label>\n                    <input type=\"date\" className=\"form-control\" value={this.state.data.expiryDate} name=\"expiryDate\" onChange={this.handleChange}></input>\n                    <label>Tags</label>\n                    <input type=\"text\" className=\"form-control\" value={this.state.data.tags} name=\"tags\" placeholder=\"Tags\" onChange={this.handleChange}></input>\n                    {\n                        this.props.product && this.props.product.images && (\n                            <>\n                                <label>Previous Image</label>\n                                <br />\n                                <img src={`${IMG_URL}/${this.props.product.images[0]}`} alt=\"product_img.png\" width=\"600px\"></img>\n                                <br />\n                            </>\n                        )\n                    }\n\n\n                    <label>Choose Image</label>\n                    <br />\n                    <input type=\"file\" onChange={this.handleChange}></input>\n                    <br />\n                    <br />\n                    <Button\n                        isValidForm={this.state.isValidForm}\n                        isSubmitting={this.props.isSubmitting}\n                    ></Button>\n                </form>\n\n            </>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport httpClient from '../../../util/httpClient';\nimport notify from '../../../util/notify';\nimport { ProductForm } from '../productForm/productForm.component';\n\nexport class AddProduct extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            isSubmitting: false\n        };\n    }\n\n    add = (data, files = []) => {\n        this.setState({\n            isSubmitting: true\n        })\n        httpClient.UPLOAD('POST', '/product', data, files)\n            .then(response => {\n                notify.showInfo('Product Added successfully')\n                this.props.history.push('view_product');\n            })\n            .catch(err => {\n                notify.handleError(err);\n                this.setState({\n                    isSubmitting: false\n                })\n            })\n\n    }\n\n\n    render() {\n        return (\n            <ProductForm\n                title=\"Add Product\"\n                submitCallback={this.add}\n                isSubmitting={this.state.isSubmitting}\n            ></ProductForm>\n        )\n    }\n}\n","import React from 'react'\n\nimport './loader.component.css'\nexport const Loader = (props) => {\n    return (\n        <div className=\"loader\">\n\n        </div>\n    )\n}\n","import React, { Component } from 'react'\nimport httpClient from '../../../util/httpClient';\nimport notify from '../../../util/notify';\nimport { Loader } from '../../common/loader/loader.component';\nimport { ProductForm } from '../productForm/productForm.component';\n\nexport class EditProduct extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            isLoading: false,\n            isSubmitting: false,\n            product: {}\n        };\n    }\n    componentDidMount() {\n        this.setState({\n            isLoading: true\n        })\n        const productId = this.props.match.params['id'];\n        httpClient.GET(`/product/${productId}`, true)\n            .then(response => {\n                this.setState({\n                    product: response.data\n                })\n            })\n            .catch(err => {\n                notify.handleError(err);\n            })\n            .finally(() => {\n                this.setState({\n                    isLoading: false\n                })\n            })\n    }\n    edit = (data, files) => {\n        this.setState({\n            isSubmitting: true\n        })\n        const requestData = {\n            ...data,\n            vendor: Object.keys(data.vendor).length && data.vendor._id,\n        }\n        httpClient.UPLOAD('PUT', `/product/${requestData._id}`, requestData, files)\n            .then(response => {\n                notify.showInfo('Product Updated Successfully')\n                this.props.history.push('/view_product');\n            })\n            .catch(err => {\n                notify.handleError(err);\n                this.setState({\n                    isSubmitting: false\n                })\n            })\n    }\n    render() {\n        let content = this.state.isLoading\n            ? <Loader></Loader>\n            : <ProductForm\n                isSubmitting={this.state.isSubmitting}\n                submitCallback={this.edit}\n                product={this.state.product}\n                title=\"Edit Product\"\n            ></ProductForm>\n        return content\n\n\n    }\n}\n","import moment from 'moment';\n\nfunction formatDate(date, format = \"YYYY/MM/DD\") {\n    return moment(date).format(format)\n}\n\nfunction formatTime(date, format = \"hh:mm a\") {\n    return moment(date).format(format)\n}\n\nexport default {\n    formatDate,\n    formatTime\n}","import httpClient from './../../util/httpClient';\nimport notify from './../../util/notify';\n// function getData(params){\n//     return function(dispatch){\n\nimport { PRODUCT_RECEIVED, PRODUCT_REMOVED, SET_IS_LOADING, SET_PAGE_NUMBER } from \"./type\"\n\n//     }\n// }\n\nexport const fetch_product_ac = (params) => (dispatch) => {\n    console.log('params >>', params);\n    console.log('here at action');\n    dispatch(isLoading(true));\n    httpClient.GET('/product', true, params)\n        .then(response => {\n            // we have response now change centralized store\n            dispatch({\n                type: PRODUCT_RECEIVED,\n                payload: response.data\n            })\n        })\n        .catch(err => {\n            notify.handleError(err);\n        })\n        .finally(() => {\n            dispatch(isLoading(false))\n        })\n\n\n}\n\nexport const remove_product_ac = (id) => (dispatch, getState) => {\n    const product = getState().product;\n    // console.log('data >>', product);\n    product.products.forEach((item, index) => {\n        if (item._id === id) {\n            product.products.splice(index, 1);\n        }\n    })\n\n    // dispatch(isLoading(true));\n    httpClient.DELETE(`/product/${id}`, true)\n        .then(response => {\n            dispatch({\n                type: PRODUCT_REMOVED,\n                payload: product.products\n            })\n        })\n        .catch(err => {\n            notify.handleError(err)\n\n        })\n        .finally(() => {\n            // dispatch(isLoading(false))\n        })\n}\n\n\nexport const setPageNumber_ac = (pageNumber) => (dispatch) => {\n    dispatch({\n        type: SET_PAGE_NUMBER,\n        payload: pageNumber\n    })\n}\n\nconst isLoading = isLoading => ({\n    type: SET_IS_LOADING,\n    payload: isLoading\n})","export const SET_IS_LOADING = 'SET_IS_LOADING';\nexport const PRODUCT_RECEIVED = 'PRODUCT_RECEIVED';\nexport const PRODUCT_REMOVED = 'PRODUCT_REMOVED';\nexport const SET_PAGE_NUMBER = 'SET_PAGE_NUMBER'","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\nimport { Loader } from '../../common/loader/loader.component';\nimport dateUtil from './../../../util/dateProcessing'\nimport { fetch_product_ac, remove_product_ac, setPageNumber_ac } from './../../../actions/products/product.action';\nimport { connect } from 'react-redux';\n\nconst IMG_URL = process.env.REACT_APP_IMG_URL;\n\nclass ViewProductComponent extends Component {\n\n    componentDidMount() {\n        console.log('check props in view product >>', this.props)\n        if (this.props.incomingProducts) {\n            this.setState({\n                products: this.props.incomingProducts\n            })\n        } else {\n            this.props.fetch(this.props.currentPage, this.props.perPage);\n        }\n    }\n\n    remove(id, index) {\n        // ask for confirmation\n        const confirmation = window.confirm('Are you sure to remove?')\n        if (confirmation) {\n            this.props.remove(id);\n        }\n    }\n\n    edit = (id) => {\n        this.props.history.push(`edit_product/${id}`);\n    }\n    changePageNumber = (evt) => {\n        let { currentPage } = this.props;\n        if (evt === 'next') {\n            currentPage += 1;\n        } else {\n            currentPage -= 1;\n        }\n        this.props.setPageNumber(currentPage)\n        this.props.fetch(currentPage, this.props.perPage);\n\n\n    }\n\n    render() {\n        let content = this.props.isLoading\n            ? <Loader></Loader>\n            : <>\n                <table className=\"table\">\n                    <thead>\n                        <tr>\n                            <th>S.N</th>\n                            <th>Name</th>\n                            <th>Category</th>\n                            <th>Price</th>\n                            <th>Created Date</th>\n                            <th>Image</th>\n                            <th>Actions</th>\n                        </tr>\n\n                    </thead>\n                    <tbody>\n                        {this.props.products.map((item, index) => (\n                            <tr key={item._id}>\n                                <td>{index + 1}</td>\n                                <td><Link to={`/product_details/${item._id}`}>{item.name}</Link> </td>\n                                <td>{item.category}</td>\n                                <td>{item.price}</td>\n                                <td>{dateUtil.formatDate(item.createdAt, 'ddd YYYY/MM/DD')}</td>\n                                <td>\n                                    <img src={`${IMG_URL}/${item.images[0]}`} alt=\"image.png\" width=\"200px\"></img>\n                                </td>\n                                <td>\n                                    <button onClick={() => this.edit(item._id)} className=\"btn btn-info\">edit</button>\n                                    <button onClick={() => this.remove(item._id, index)} className=\"btn btn-danger\">delete</button>\n                                </td>\n                            </tr>\n                        ))}\n\n                    </tbody>\n                </table>\n                <button className=\"btn btn-success\" onClick={() => this.changePageNumber()}>Previous</button>\n                <button className=\"btn btn-success\" onClick={() => this.changePageNumber('next')}>Next</button>\n            </>\n        return (\n            <div>\n                <h2>View Product</h2>\n                {this.props.incomingProducts && (\n                    <button className=\"btn btn-success\" onClick={this.props.resetSearch}>search again</button>\n                )}\n                {content}\n\n            </div>\n        )\n    }\n}\n\n// what comes in inside component\nconst mapStateToProps = (rootStore) => ({\n    isLoading: rootStore.product.isLoading,\n    products: rootStore.product.products,\n    perPage: rootStore.product.perPage,\n    currentPage: rootStore.product.currentPage\n})\n\n// what actions will go out from component\nconst mapDispatchToProps = dispatch => ({\n    fetch: (currentPage, perPage) => dispatch(fetch_product_ac({\n        currentPage,\n        perPage\n    })),\n    remove: (id) => dispatch(remove_product_ac(id)),\n    setPageNumber: (pageNumber) => dispatch(setPageNumber_ac(pageNumber))\n})\n\nexport const ViewProduct = connect(mapStateToProps, mapDispatchToProps)(ViewProductComponent)\n","import React, { Component } from 'react'\nimport httpClient from '../../../util/httpClient'\nimport notify from '../../../util/notify'\nimport { Button } from '../../common/button/button.component'\nimport { ViewProduct } from '../viewProduct/viewProduct.component'\n\nconst defaultForm = {\n    category: '',\n    name: '',\n    brand: '',\n    minPrice: '',\n    maxPrice: '',\n    fromDate: '',\n    multipleDateRange: '',\n    toDate: '',\n    tags: '',\n    discountedItem: ''\n}\n\nexport class SearchComponent extends Component {\n    constructor() {\n        super()\n\n        this.state = {\n            data: {\n                ...defaultForm\n            },\n            error: {\n                ...defaultForm\n            },\n            isSubmitting: false,\n            isValidForm: true,\n            isLoading: false,\n            categories: [],\n            allProducts: [],\n            names: [],\n            searchResults: []\n        }\n    }\n    componentDidMount() {\n        this.setState({\n            isLoading: true\n        })\n        httpClient.POST('/product/search', {})\n            .then(response => {\n                let categories = [];\n                response.data.forEach((item, index) => {\n                    if (categories.indexOf(item.category) === -1) {\n                        categories.push(item.category);\n                    }\n                })\n                this.setState({\n                    categories,\n                    allProducts: response.data\n                })\n            })\n            .catch(err => {\n                notify.handleError(err);\n            })\n            .finally(() => {\n                this.setState({\n                    isLoading: false\n                })\n            })\n    }\n    handleChange = e => {\n        let { name, value, checked, type } = e.target;\n        if (type === 'checkbox') {\n            value = checked;\n        }\n\n        if (name === 'category') {\n            this.prepareNames(value);\n        }\n        this.setState(pre => ({\n            data: {\n                ...pre.data,\n                [name]: value\n            }\n        }))\n    }\n\n    prepareNames = (selectedCategory) => {\n        const { allProducts } = this.state;\n        let names = allProducts.filter((item, index) => {\n            if (item.category === selectedCategory) {\n                return true;\n            }\n        })\n        this.setState({\n            names\n        });\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.setState({\n            isSubmitting: true\n        })\n        httpClient.POST('/product/search', this.state.data)\n            .then(response => {\n                if (!response.data.length) {\n                    notify.showInfo(\"No any Products matched your search query\");\n                }\n                this.setState({\n                    searchResults: response.data\n                })\n            })\n            .catch(err => {\n                notify.handleError(err);\n            })\n            .finally(() => {\n                this.setState({\n                    isSubmitting: false\n                })\n            })\n    }\n\n    resetSearch = () => {\n        this.setState({\n            searchResults: []\n        })\n    }\n\n    render() {\n        let content = this.state.searchResults.length\n            ? <ViewProduct incomingProducts={this.state.searchResults} resetSearch={this.resetSearch}></ViewProduct>\n            : <>\n                <h2>Search Product</h2>\n                <form className=\"form-group\" onSubmit={this.handleSubmit}>\n                    <label>Category</label>\n                    <select name=\"category\" value={this.state.data.category || ''} className=\"form-control\" onChange={this.handleChange}>\n                        <option disabled value=\"\">(Select Category)</option>\n                        {this.state.categories.map((item, index) => (\n                            <option key={index} value={item}>{item}</option>\n                        ))}\n                    </select>\n                    {this.state.data.category && (\n                        <>\n                            <label>Name</label>\n                            <select name=\"name\" value={this.state.data.name || ''} className=\"form-control\" onChange={this.handleChange}>\n                                <option disabled value=\"\">(Select Name)</option>\n                                {this.state.names.map((item, index) => (\n                                    <option key={index} value={item.name}>{item.name}</option>\n                                ))}\n                            </select>\n                        </>\n                    )}\n                    <label>Min Price</label>\n                    <input type=\"number\" className=\"form-control\" name=\"minPrice\" onChange={this.handleChange}></input>\n                    <label>Max Price</label>\n                    <input type=\"number\" className=\"form-control\" name=\"maxPrice\" onChange={this.handleChange}></input>\n                    <label>Select Date</label>\n                    <input type=\"date\" className=\"form-control\" name=\"fromDate\" onChange={this.handleChange}></input>\n                    <input type=\"checkbox\" name=\"multipleDateRange\" onChange={this.handleChange}></input>\n                    <label>Multiple Date Range</label>\n                    <br />\n                    {this.state.data.multipleDateRange && (\n                        <>\n                            <label>To Date</label>\n                            <input type=\"date\" className=\"form-control\" name=\"toDate\" onChange={this.handleChange}></input>\n                        </>\n                    )}\n\n                    <label>Tags</label>\n                    <input type=\"string\" className=\"form-control\" name=\"tags\" onChange={this.handleChange}></input>\n                    <br />\n                    <Button\n                        isSubmitting={this.state.isSubmitting}\n                        isValidForm={this.state.isValidForm}>\n\n                    </Button>\n\n\n                </form>\n\n            </>\n        return content;\n\n\n    }\n}\n","import React from 'react';\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\nimport { Login } from './auth/login/login.component';\nimport { Register } from './auth/register/register.component';\nimport { Header } from './common/header/header.component';\nimport { MessageComponent } from './common/message/message.component';\nimport { SideBar } from './common/sidebar/sidebar.component';\nimport { AddProduct } from './products/addProduct/addProduct.component';\nimport { EditProduct } from './products/editProduct/editProduct.component';\nimport { SearchComponent } from './products/searchProduct/searchProduct.component';\nimport { ViewProduct } from './products/viewProduct/viewProduct.component';\n\n\nconst Home = (props) => {\n    return <SearchComponent></SearchComponent>\n}\n\nconst Dashboard = (props) => {\n    return <p>Welcome!, Please use side navigation menu or contact system administrator for support</p>\n}\nconst NotFound = () => {\n    return <div>\n        <p>Not Found</p>\n        <img src=\"images/download.jpeg\" width=\"600px\" alt=\"notfound.png\"></img>\n    </div>\n}\n\nconst ProtectedRoute = ({ component: Component, ...rest }) => {\n    return <Route {...rest} render={routeProps => (\n        localStorage.getItem('token')\n            ? <>\n                <div className=\"nav_bar\">\n                    <Header isLoggedIn={true}></Header>\n                </div>\n                <div className=\"side_bar\">\n                    <SideBar isLoggedIn={true}></SideBar>\n                </div>\n                <div className=\"main_content\">\n                    <Component {...routeProps}></Component>\n                </div>\n            </>\n            : <Redirect to=\"/\"></Redirect>\n    )} >\n\n    </Route >\n\n}\n\nconst PublicRoute = ({ component: Component, ...rest }) => {\n    return <Route {...rest} render={routeProps => (\n        <>\n            <div className=\"nav_bar\">\n                <Header isLoggedIn={localStorage.getItem('token') ? true : false}></Header>\n            </div>\n            {/* <div className=\"side_bar\">\n                <SideBar isLoggedIn={localStorage.getItem('token') ? true : false} ></SideBar>\n            </div> */}\n            <div className=\"main_content\">\n                <Component {...routeProps}></Component>\n            </div>\n        </>\n    )} >\n\n    </Route >\n\n}\n\nexport const AppRouting = (props) => {\n    return (\n        <BrowserRouter>\n            <Switch>\n                <PublicRoute exact path=\"/\" component={Login}></PublicRoute>\n                <PublicRoute path=\"/register\" component={Register}></PublicRoute>\n                <PublicRoute exact path=\"/home\" component={Home}></PublicRoute>\n                <ProtectedRoute exact path=\"/dashboard\" component={Dashboard}></ProtectedRoute>\n                <ProtectedRoute path=\"/add_product\" component={AddProduct}></ProtectedRoute>\n                <ProtectedRoute path=\"/view_product\" component={ViewProduct}></ProtectedRoute>\n                <ProtectedRoute path=\"/edit_product/:id\" component={EditProduct}></ProtectedRoute>\n                <ProtectedRoute path=\"/search_product\" component={SearchComponent}></ProtectedRoute>\n                <ProtectedRoute path=\"/chat\" component={MessageComponent} />\n                <PublicRoute component={NotFound}></PublicRoute>\n            </Switch>\n        </BrowserRouter>\n    )\n}\n\n// summarize\n// class based component statefull component\n// routing==> objective SPA \n// library ==> react-router-dom\n// BrowserRouter = wrapper\n// Route ==> configuration builder\n// it will supply props as history match and location to it's componenent\n\n// exact ==>exact path match\n// Switch==> one routing config at a time\n// Link ==> Link is used to navigate on users click\n// history.push('/path') navigate\n// match >> params dynamic endpoint value","import { PRODUCT_RECEIVED, PRODUCT_REMOVED, SET_IS_LOADING, SET_PAGE_NUMBER } from \"../actions/products/type\"\n\nconst initialState = {\n    isLoading: false,\n    products: [],\n    currentPage: 1,\n    perPage: 10\n}\n\nexport const productReducer = (state = initialState, action) => {\n    console.log('here at reducer', action);\n    switch (action.type) {\n        case SET_IS_LOADING:\n            return {\n                ...state,\n                isLoading: action.payload\n            }\n        case PRODUCT_RECEIVED:\n            return {\n                ...state,\n                products: action.payload\n            }\n\n        case PRODUCT_REMOVED:\n            return {\n                ...state,\n                products: [...action.payload]\n            }\n        case SET_PAGE_NUMBER:\n            return {\n                ...state,\n                currentPage: action.payload\n            }\n\n        default:\n            return {\n                ...state\n            }\n    }\n\n}","import { combineReducers } from 'redux'\nimport { productReducer } from './product.red';\n// combine reducers\n\nexport default combineReducers({\n    product: productReducer\n})\n\n\n// // imagine data structure\n// {\n//     products:[],\n//     isLoading:[],\n//     users:[],\n//     nofication:[]\n// }\n\n// {\n//     product:{\n//         isLoading:false,\n//         products:[]\n//     },\n//     user:{\n//         isLoading:false,\n//         users:[]\n//     },\n//     nofication:{\n//         notifiactions:[]\n//     }\n// }","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk'\nimport rootReducer from './reducers';\n\nconst middlewares = [thunk]\n\n// redux store goes here\nconst initialState = {};\n\nexport const store = createStore(rootReducer, initialState, applyMiddleware(...middlewares))\n\n// {\n// product: {\n//     isLoading: false,\n//         products: []\n// }\n// }\n","import React from 'react';\nimport { AppRouting } from './app.routing';\nimport { Provider } from 'react-redux';\nimport { store } from './../store';\n\n// Provider is wrapper to wrap react application \n\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\n// aim of this file is to supply content to index.js\nexport const App = () => {\n    return (\n        <>\n            <Provider store={store}>\n                <AppRouting></AppRouting>\n            </Provider>\n            <ToastContainer></ToastContainer>\n        </>\n    )\n}\n\n// component is basic building block of react\n// each component will return a single html node\n// component can be\n// stateful => if a component needs to store a data within a component\n// stateless ==> if we dont need any data to be maintained\n// class based component ==> statefull\n// functional component ===> stateless\n\n// props ==> incoming data for an component\n// state ==> data within a component\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './components/app.component';\n\n// content\n// content will be supplied from root component file\n\nReactDOM.render(<App></App>, document.getElementById('root'));"],"sourceRoot":""}